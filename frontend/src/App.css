@import "tailwindcss";

@font-face {
  font-family: "vamos";
  src: url("/vamos.otf") format("opentype");
}

@font-face {
  font-family: "alegreya"; 
  src: url("/alegreya.ttf") format("truetype");
}

.vamos {
  font-family: "vamos", sans-serif;
}

.alegreya {
  font-family: "alegreya", sans-serif;
}

body {
  cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='35' height='20' viewBox='0 0 20 20'><text x='0' y='15' font-family='monospace' font-size='16' fill='%235793F8'>&lt;/&gt;</text></svg>")
      20 20,
    auto;
}

html, body, #root {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

@import url('https://fonts.googleapis.com/css2?family=Alegreya+Sans+SC:ital,wght@0,100;0,300;0,400;0,500;0,700;0,800;0,900;1,100;1,300;1,400;1,500;1,700;1,800;1,900&family=Baumans&family=Intel+One+Mono:ital,wght@0,300..700;1,300..700&display=swap');


.alegreya-sans-sc-regular {
  font-family: "Alegreya Sans SC", sans-serif;
  font-weight: 400;
  font-style: normal;
}

/* In your main CSS file, e.g., index.css */

.grainy-background {
  /* This is your main background color or gradient */
  background: linear-gradient(to bottom right, #1a202c, #2d3748);
  position: relative; /* Necessary for the pseudo-element to be positioned correctly */
  overflow: hidden; /* Ensures the overlay doesn't spill out */
}

.grainy-background::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  
  /* The URL to your downloaded noise texture */
  background-image: url('/noise.png'); 
  
  /* Controls the intensity of the grain effect */
  opacity: 0.04; /* Adjust this value to make the grain more or less subtle */
  
  /* You can experiment with animation for a "TV static" effect */
  /* animation: grain 8s steps(10) infinite; */
}

/* Optional animation for a dynamic grain */
@keyframes grain {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-5%, -10%); }
  20% { transform: translate(-15%, 5%); }
  30% { transform: translate(7%, -25%); }
  40% { transform: translate(-5%, 25%); }
  50% { transform: translate(-15%, 10%); }
  60% { transform: translate(15%, 0%); }
  70% { transform: translate(0%, 15%); }
  80% { transform: translate(3%, 35%); }
  90% { transform: translate(-10%, 10%); }
}